{"version":3,"sources":["icon.png","Results.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Results","props","state","windowUrl","selection","asin","response","verdict","evidence","qas","reviews","chrome","tabs","query","active","lastFocusedWindow","setState","url","alert","split","baseUrl","URL","origin","fetchData","fetch","then","res","json","result","body","console","log","catch","err","color","paddingLeft","width","map","qa","id","question","answer","review","title","text","Component","App","className","style","textAlign","class","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2a23d27e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.26b30d31.png\";"," /*global chrome*/\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardTitle, CardDeck, Progress, Row } from 'reactstrap';\nimport { CircleProgress } from 'react-gradient-progress';\n\nclass Results extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      windowUrl: \"\",\n      selection: \"\",\n      asin: \"\",\n      response: {\n        verdict: false,\n        evidence: {\n          qas: [],\n          reviews: [],\n        }\n      }\n    }\n  }\n\n  componentDidMount() {\n    chrome.tabs.query({active: true, lastFocusedWindow: true}, tabs => {\n      this.setState({\n        windowUrl: tabs[0].url,\n      })\n\n      alert(this.state.windowUrl)\n\n      const url = \"https://fdaf1c184814.ngrok.io\";\n      var asin = this.state.windowUrl.split(\"/\")[4];\n      if (asin) {\n        this.setState({\n          asin: \"\" + asin\n        })\n      }\n      alert(this.state.asin)\n      const baseUrl = new URL(this.state.windowUrl).origin\n      alert(baseUrl)\n\n      const fetchData = url + \"/product/\" + `${this.state.asin}` + '?urlOrigin=' + baseUrl;\n      alert(fetchData)\n\n      fetch(fetchData)\n        .then(res => {\n          return res.json();\n        })\n        .then(result => {\n          // console.log(\"result\", result);\n          // var body = JSON.parse(result.body);\n          // console.log(\"result.body\", result.body)\n          this.setState({\n            response: result.body,\n          })\n          console.log(\"this.state\", this.state.response)\n        })\n        .catch(err => { \n          alert(\"error\", err)\n        }) ;\n      });\n\n      // console.log(await fetch(fetchData));\n\n\n\n    // fetch(fetchData,\n    //   { \n    //     method: \"GET\",\n    //   }, \n    // })\n    // .then(response => response.json())\n    // // .then(res => {\n    // //   return res.json()\n    // // })\n    // // .then(result => {\n    // //   var body = JSON.parse(result.body);\n    // //   this.setState({\n    // //     response: body,\n    // //   })\n    // // })\n    // // .catch(err => { \n    // //   this.setState({\n    // //     response: \"error: \" + err\n    // //   })\n    // // }) ;\n    // .then(data => alert(data));\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.response.verdict ?\n          <div style={{ color: 'red', paddingLeft: \"20px\" }}>\n            <h3>\n              <strong> WARNING </strong>\n            </h3>\n          </div>\n        : <div/>}\n        <div style={{ width: \"300px\" }} class=\"boxes\">\n          {this.state.response.evidence.qas ? this.state.response.evidence.qas.map((qa, id) => (\n             <div class=\"box\">\n               <h2>{qa.question}</h2>\n               <p>{qa.answer}</p>\n               <div class=\"svg\">\n                  <svg  aria-hidden=\"true\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\"><g fill=\"none\"><path fill=\"#676E74\" d=\"M56.842 7.158c-9.526-9.563-24.902-9.525-34.428 0-8.025 8.026-9.45 20.44-3.525 30.003l-2.513 2.55-1.356 6.144 4.214 4.214 5.093-2.408 2.512-2.55a24.254 24.254 0 0030.003-3.525c9.563-9.526 9.525-24.902 0-34.428z\"/><path fill=\"#474F54\" d=\"M24.327 47.661l2.512-2.55a24.254 24.254 0 0030.003-3.525c9.563-9.526 9.525-24.902 0-34.428l-40.26 40.26 2.652 2.651 5.093-2.408z\"/><path fill=\"#64E1DC\" d=\"M54.213 9.787a20.56 20.56 0 00-14.585-6.041C28.236 3.746 19 12.98 19 24.372a20.564 20.564 0 006.041 14.586 20.564 20.564 0 0014.586 6.04c11.392 0 20.626-9.234 20.626-20.626a20.56 20.56 0 00-6.041-14.585z\"/><path fill=\"#00C8C8\" d=\"M60.254 24.372a20.56 20.56 0 00-6.041-14.585l-29.17 29.17A20.564 20.564 0 0039.627 45c11.392 0 20.626-9.235 20.626-20.627z\"/><path fill=\"#EFEFF4\" d=\"M56.239 23.41c-.184-.307-2.98-4.914-7.281-8.368-2.63-2.113-5.822-3.796-9.33-3.796-9.242 0-16.314 11.669-16.61 12.165l-.576.961.575.961c.184.309 2.98 4.916 7.28 8.37 2.631 2.112 5.823 3.795 9.33 3.795 9.243 0 16.315-11.668 16.612-12.165l.574-.96-.574-.962z\"/><path fill=\"#DADAE5\" d=\"M56.239 25.333l.574-.96-.574-.962c-.184-.308-2.98-4.915-7.281-8.369l-18.66 18.66c2.63 2.113 5.822 3.796 9.33 3.796 9.242 0 16.314-11.668 16.61-12.165z\"/><path fill=\"#64E1DC\" d=\"M43.604 20.396a5.607 5.607 0 00-3.976-1.65 5.632 5.632 0 00-5.626 5.626c0 1.551.631 2.958 1.65 3.976a5.609 5.609 0 003.976 1.65 5.632 5.632 0 005.625-5.626c0-1.55-.63-2.957-1.649-3.976z\"/><path fill=\"#00C8C8\" d=\"M45.253 24.372c0-1.55-.63-2.957-1.649-3.976l-7.952 7.952a5.608 5.608 0 003.976 1.65 5.632 5.632 0 005.625-5.626z\"/><path fill=\"#676E74\" d=\"M40.954 23.046a1.876 1.876 0 10-1.326 3.2 1.876 1.876 0 001.326-3.2z\"/><path fill=\"#474F54\" d=\"M41.503 24.372c0-.517-.21-.986-.55-1.326l-2.65 2.652a1.876 1.876 0 003.2-1.326z\"/><path fill=\"#575C60\" d=\"M20.333 43.667l-3.957-3.957L0 56.049l3.975 3.976L7.951 64l16.376-16.339z\"/><path fill=\"#333637\" d=\"M24.327 47.661l-3.994-3.994L3.975 60.025 7.951 64z\"/></g></svg>\n               </div>\n             </div>\n          )) : <div />}\n          {this.state.response.evidence.reviews ? this.state.response.evidence.reviews.map((review, id) => (\n            <div class=\"box\">\n              <h2>{review.title}</h2>\n              <p>{review.text}</p>\n              <div class=\"svg\">\n               <svg aria-hidden=\"true\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" width=\"64\" height=\"64\"><g fill=\"none\"><path fill=\"#EFEFF4\" d=\"M64 14.454v41.788H0V14.454l3.75-3.787h56.5z\"/><path fill=\"#DADAE5\" d=\"M64 14.454v41.788H32V10.667h28.25z\"/><path fill=\"#474F54\" d=\"M0 0h64v15.515H0z\"/><path fill=\"#32393F\" d=\"M32 0h32v15.515H32z\"/><g fill=\"#FF637B\"><path d=\"M7.758 5.818h3.685v3.879H7.758zM15.128 5.818h3.685v3.879h-3.685zM22.497 5.818h3.685v3.879h-3.685z\"/></g><path fill=\"#FF637B\" d=\"M45.576 42.245V64H34.355v-3.71h-3.74V64H19.394V42.245l11.37-9.275h3.105z\"/><path fill=\"#DADAE5\" d=\"M11.636 22.303h41.697v3.879H11.636z\"/><path fill=\"#C9C9D3\" d=\"M32 22.303h20.364v3.879H32z\"/><path fill=\"#E63950\" d=\"M45.576 42.245V64H33.939v-3.71H32V32.97h1.435z\"/><path fill=\"#EFEFF4\" d=\"M30.061 45.576h3.878v3.879h-3.878z\"/><path fill=\"#DADAE5\" d=\"M32 45.576h1.939v3.879H32z\"/><path fill=\"#676E74\" d=\"M50.424 45.779l-2.452 2.706-15.487-13.526-15.488 13.526-2.452-2.706 17.94-15.718z\"/><path fill=\"#474F54\" d=\"M32 30.061l18.424 15.718-2.518 2.706L32 34.959z\"/></g></svg>\n             </div>\n            </div>\n          )) : <div />}\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Results;\n","import React, { Component } from 'react';\nimport logo from './icon.png';\nimport Results from './Results.js';\nimport './App.css';\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <h1 style={{ textAlign: 'center' }}>\n            Blueriddle\n          </h1>\n          <div class=\"topProgress\">\n            <div class=\"topProgress-bar\" />\n          </div>\n          <h2>\n            Know where your Amazon products come from\n          </h2>\n        </div>\n        <Results/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*global chrome*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}