{"version":3,"sources":["question.png","dislike.png","icon.png","Results.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Results","props","state","windowUrl","selection","asin","receivedResponse","response","verdict","evidence","qas","reviews","error","qasToShow","reviewsToShow","qasExpanded","reviewsExpanded","showMoreQas","bind","showMoreReviews","this","setState","length","chrome","tabs","query","active","lastFocusedWindow","url","split","baseUrl","URL","origin","fetchData","fetch","then","res","json","result","body","catch","err","paddingLeft","color","width","slice","map","qa","id","fontVariant","marginBottom","question","marginTop","answer","Question","onHover","review","title","text","Dislike","class","d","Component","App","className","style","textAlign","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.f3b8dfdb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/question.4be22eb1.png\";","module.exports = __webpack_public_path__ + \"static/media/dislike.9a433a23.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.26b30d31.png\";"," /*global chrome*/\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardTitle, CardDeck, Progress, Row } from 'reactstrap';\nimport { CircleProgress } from 'react-gradient-progress';\nimport Question from './question.png';\nimport Dislike from './dislike.png';\n\nclass Results extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      windowUrl: \"\",\n      selection: \"\",\n      asin: \"\",\n      receivedResponse: false,\n      response: {\n        verdict: false,\n        evidence: {\n          qas: [],\n          reviews: [],\n        }\n      },\n      error: false,\n      qasToShow: 3,\n      reviewsToShow: 3,\n      qasExpanded: false,\n      reviewsExpanded: false,\n    }\n    this.showMoreQas = this.showMoreQas.bind(this);\n    this.showMoreReviews = this.showMoreReviews.bind(this);\n  }\n\n  showMoreQas() {\n    this.state.qasToShow === 3 ? (\n      this.setState({ qasToShow: this.state.response.evidence.qas.length, qasExpanded: true })\n    ) : (\n      this.setState({ qasToShow: 3, qasExpanded: false })\n    )\n  }\n\n  showMoreReviews() {\n    this.state.reviewsToShow === 3 ? (\n      this.setState({ reviewsToShow: this.state.response.evidence.reviews.length, reviewsExpanded: true })\n    ) : (\n      this.setState({ reviewsToShow: 3, reviewsExpanded: false })\n    )\n  }\n\n  componentDidMount() {\n    chrome.tabs.query({active: true, lastFocusedWindow: true}, tabs => {\n      this.setState({\n        windowUrl: tabs[0].url,\n      })\n\n      const url = \"https://fdaf1c184814.ngrok.io\";\n      var asin = this.state.windowUrl.split(\"/\")[4];\n      if (asin) {\n        this.setState({\n          asin: \"\" + asin\n        })\n      }\n      const baseUrl = new URL(this.state.windowUrl).origin\n\n      const fetchData = url + \"/product/\" + `${this.state.asin}` + '?urlOrigin=' + baseUrl;\n\n      fetch(fetchData)\n      .then(res => {\n        return res.json();\n      })\n      .then(result => {\n        this.setState({\n          response: result.body,\n          receivedResponse: true,\n        })\n      })\n      .catch(err => { \n        this.setState({\n          error: true,\n        })\n      }) ;\n    });\n  }\n\n  render() {\n    return (\n      <>\n        {!this.state.receivedResponse ?\n          <div class=\"loadingWrap\" style={{ marginTop: '30px' }}>\n            <svg class=\"loading\" viewBox=\"0 0 84.6 84.6\">\n              <defs>\n                <filter id=\"stickyFilter\">\n                  <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"2\" result=\"blur\" />\n                  <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 19 -9\" result=\"filter\" />\n                  <feComposite in=\"SourceGraphic\" in2=\"filter\" operator=\"atop\"/>\n                </filter>\n                <linearGradient id=\"gradient\" class=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"40%\" gradientTransform=\"rotate(45)\">\n                  <stop offset=\"0%\"/>\n                  <stop offset=\"100%\"/>\n                </linearGradient>\n              </defs>\n              <clipPath id=\"clip\">\n                <circle cx=\"42.3\" cy=\"42.3\" r=\"41.6\"/>\n              </clipPath>\n              <g clip-path=\"url(#clip)\">\n                <path class=\"background\" d=\"M0 0h84.6v84.6H0z\"/>\n                <g class=\"exhaust\">\n                  <path class=\"gradientBox\" d=\"M2.37244 65.5981l28.84968-28.84968 16.54614 16.54614-28.84968 28.84968z\"/>\n                  <path class=\"gradientBox\" d=\"M6.35189 69.55189l28.84968-28.84968 8.34378 8.34378-28.84968 28.84968z\"/>\n                  <g class=\"filteredGroup\">\n                    <path class=\"line1 line lineThick\" d=\"M47.7 49.6L13.4 83.9\"/>\n                    <path class=\"line2 line lineThick\" d=\"M42.3 42.3L8 76.6\"/>\n                    <path class=\"line3 line lineThick\" d=\"M33.5 38.5L-.8 72.8\"/>\n\n                    <path class=\"line4 line lineDots\"  d=\"M45 45.82L10.7 80.12\"/>\n                    <path class=\"line5 line lineDots\" d=\"M38.16 40.06L3.86 74.36\"/>\n\n                    <path class=\"line6 line lineStatic\" d=\"M39.46 41.15L18.91 61.7\"/>\n                    <path class=\"line7 line lineStatic\" d=\"M43.57 43.77L23.02 64.32\"/>\n                  </g>\n                </g>\n                <g class=\"rotate\">\n                  <g class=\"rumble\">\n                    <path class=\"arrow\" d=\"M60.8 27.2c.6-2.1-1.3-4-3.4-3.4L19.5 35.3c-2.2.7-2.6 3.6-.8 4.9l15.8 7.6c1.1.5 2 1.4 2.5 2.6L44.4 66c1.3 1.9 4.2 1.4 4.9-.8l11.5-38z\"/>\n                  </g>\n                </g>\n              </g>\n            </svg>\n            <div class=\"label\">Checking where this product was made...</div>\n          </div>\n        : <div>\n          {this.state.response.verdict ?\n            <div style={{ paddingLeft: \"20px\" }}>\n              <h2 style={{ color: 'red'}}>\n                <strong> WARNING! </strong> This product was likely made in China.\n              </h2>\n              <h3>\n                Here's what we found.\n              </h3>\n            </div>\n          : <div>\n            <h2 style={{ color: 'green'}}>\n              <strong> All good! </strong> This product probably wasn't made in China.\n            </h2>\n            <h3>\n              We searched through questions, reviews, and product information so you don't have to.\n            </h3>\n          </div>\n          }\n          <div style={{ width: \"300px\" }} class=\"boxes\">\n            {this.state.response.evidence.qas ? this.state.response.evidence.qas.slice(0, this.state.qasToShow).map((qa, id) => (\n              <div class=\"box\" key={id}>\n                <p style={{ fontVariant: 'smallCaps', color: '#0b2d6cff', marginBottom: '0px' }}>\n                  <strong> QUESTION </strong>\n                </p>\n                <h3 className=\"textClamp\">{qa.question}</h3>\n                <p style={{ marginTop: '4px', marginBottom: '4px'}} className=\"textClamp\">{qa.answer}</p>\n                <div class=\"svg\">\n                  <img src={Question} height=\"40px\" width=\"40px\"/>\n                </div>\n              </div>\n            )) : <div />}\n            {this.state.response.verdict ?\n              <a className=\"btn btn-primary showMore\" onClick={this.showMoreQas} style={{ onHover: 'pointer' }}>\n                {this.state.qasExpanded ? (\n                  <span> - Show less</span>\n                ) : (\n                  <span> + Show more</span>\n                )}\n              </a>\n            : <div />}\n            {this.state.response.evidence.reviews ? this.state.response.evidence.reviews.slice(0, this.state.reviewsToShow).map((review, id) => (\n              <div class=\"box\" key={id}>\n                <p style={{ fontVariant: 'smallCaps', color: '#0b2d6cff', marginBottom: '0px' }}>\n                  <strong> REVIEW </strong>\n                </p>\n                <h3 className=\"textClamp\">{review.title}</h3>\n                <p style={{ marginTop: '4px', marginBottom: '4px'}} className=\"textClamp\">{review.text}</p>\n                <div class=\"svg\">\n                 <img src={Dislike} height=\"40px\" width=\"40px\"/>\n               </div>\n              </div>\n            )) : <div />}\n            {this.state.response.verdict ?\n              <a className=\"btn btn-primary showMore\" onClick={this.showMoreReviews}>\n                {this.state.reviewsExpanded ? (\n                  <span> - Show less</span>\n                ) : (\n                  <span> + Show more</span>\n                )}\n              </a>\n            : <div />}\n          </div>\n        </div>\n      }\n      </>\n    )\n  }\n}\n\nexport default Results;\n","import React, { Component } from 'react';\nimport logo from './icon.png';\nimport Results from './Results.js';\nimport './App.css';\nimport './App.scss';\nimport './loading.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <h1 style={{ textAlign: 'center' }}>\n            Blueriddle\n          </h1>\n          <div class=\"topProgress\">\n            <div class=\"topProgress-bar\" />\n          </div>\n          <h2>\n            Know where your Amazon products come from\n          </h2>\n        </div>\n        <Results/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*global chrome*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}