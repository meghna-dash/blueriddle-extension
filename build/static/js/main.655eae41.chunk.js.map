{"version":3,"sources":["logo.png","question.png","dislike.png","icon.png","logo-black.png","Results.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Results","props","state","windowUrl","isAmazonPage","selection","asin","receivedResponse","response","verdict","evidence","qas","reviews","error","qasToShow","reviewsToShow","qasExpanded","reviewsExpanded","showMoreQas","bind","showMoreReviews","extractASIN","this","setState","length","url","ASINreg","RegExp","cMatch","match","chrome","tabs","query","active","lastFocusedWindow","includes","baseUrl","URL","origin","fetchData","fetch","then","res","json","result","body","catch","err","paddingLeft","paddingRight","color","width","slice","map","qa","id","question","answer","Question","onHover","review","title","text","Dislike","require","marginTop","class","d","className","Component","App","style","textAlign","padding","src","Logo","height","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.655eae41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8b81f210.png\";","module.exports = __webpack_public_path__ + \"static/media/question.4be22eb1.png\";","module.exports = __webpack_public_path__ + \"static/media/dislike.9a433a23.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.26b30d31.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-black.1e253e8b.png\";"," /*global chrome*/\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardTitle, CardDeck, Progress, Row } from 'reactstrap';\nimport { CircleProgress } from 'react-gradient-progress';\nimport Question from './question.png';\nimport Dislike from './dislike.png';\nimport Logo from './logo.png';\n\nclass Results extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      windowUrl: \"\",\n      isAmazonPage: true,\n      selection: \"\",\n      asin: \"\",\n      receivedResponse: false,\n      response: {\n        verdict: false,\n        evidence: {\n          qas: [],\n          reviews: [],\n        }\n      },\n      error: false,\n      qasToShow: 3,\n      reviewsToShow: 3,\n      qasExpanded: false,\n      reviewsExpanded: false,\n    }\n    this.showMoreQas = this.showMoreQas.bind(this);\n    this.showMoreReviews = this.showMoreReviews.bind(this);\n    this.extractASIN = this.extractASIN.bind(this);\n  }\n\n  showMoreQas() {\n    this.state.qasToShow === 3 ? (\n      this.setState({ qasToShow: this.state.response.evidence.qas.length, qasExpanded: true })\n    ) : (\n      this.setState({ qasToShow: 3, qasExpanded: false })\n    )\n  }\n\n  showMoreReviews() {\n    this.state.reviewsToShow === 3 ? (\n      this.setState({ reviewsToShow: this.state.response.evidence.reviews.length, reviewsExpanded: true })\n    ) : (\n      this.setState({ reviewsToShow: 3, reviewsExpanded: false })\n    )\n  }\n\n  extractASIN(url){\n    var ASINreg = new RegExp(/(?:\\/)([A-Z0-9]{10})(?:$|\\/|\\?)/);\n    var cMatch = url.match(ASINreg);\n    if(cMatch == null){\n      this.setState({\n        isAmazonPage: false,\n      })\n    }\n    this.setState({\n      asin: \"\" + cMatch[1],\n    })\n  }\n\n  componentDidMount() {\n    chrome.tabs.query({active: true, lastFocusedWindow: true}, tabs => {\n      this.setState({\n        windowUrl: tabs[0].url,\n      })\n\n      if(this.state.windowUrl.includes(\"amazon\")) {\n        const url = \"https://api.blueriddle.io\";\n        this.extractASIN(this.state.windowUrl);\n\n        const baseUrl = new URL(this.state.windowUrl).origin\n\n        const fetchData = url + \"/product/\" + `${this.state.asin}` + '?urlOrigin=' + baseUrl;\n\n        fetch(fetchData)\n        .then(res => {\n          return res.json();\n        })\n        .then(result => {\n          this.setState({\n            response: result.body,\n            receivedResponse: true,\n          })\n        })\n        .catch(err => { \n          this.setState({\n            error: true,\n          })\n        }) ;\n      }\n      else {\n        this.setState({\n          isAmazonPage: false,\n        })\n      }\n    });\n  }\n\n  render() {\n    if(this.state.isAmazonPage) {\n      return (\n        <>\n          {!this.state.receivedResponse ?\n            <div class=\"loadingWrap\" style={{ marginTop: '30px', paddingLeft: '12px', paddingRight: '12px' }}>\n              <svg class=\"loading\" viewBox=\"0 0 84.6 84.6\">\n                <defs>\n                  <filter id=\"stickyFilter\">\n                    <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"2\" result=\"blur\" />\n                    <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 19 -9\" result=\"filter\" />\n                    <feComposite in=\"SourceGraphic\" in2=\"filter\" operator=\"atop\"/>\n                  </filter>\n                  <linearGradient id=\"gradient\" class=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"40%\" gradientTransform=\"rotate(45)\">\n                    <stop offset=\"0%\"/>\n                    <stop offset=\"100%\"/>\n                  </linearGradient>\n                </defs>\n                <clipPath id=\"clip\">\n                  <circle cx=\"42.3\" cy=\"42.3\" r=\"41.6\"/>\n                </clipPath>\n                <g clip-path=\"url(#clip)\">\n                  <path class=\"background\" d=\"M0 0h84.6v84.6H0z\"/>\n                  <g class=\"exhaust\">\n                    <path class=\"gradientBox\" d=\"M2.37244 65.5981l28.84968-28.84968 16.54614 16.54614-28.84968 28.84968z\"/>\n                    <path class=\"gradientBox\" d=\"M6.35189 69.55189l28.84968-28.84968 8.34378 8.34378-28.84968 28.84968z\"/>\n                    <g class=\"filteredGroup\">\n                      <path class=\"line1 line lineThick\" d=\"M47.7 49.6L13.4 83.9\"/>\n                      <path class=\"line2 line lineThick\" d=\"M42.3 42.3L8 76.6\"/>\n                      <path class=\"line3 line lineThick\" d=\"M33.5 38.5L-.8 72.8\"/>\n\n                      <path class=\"line4 line lineDots\"  d=\"M45 45.82L10.7 80.12\"/>\n                      <path class=\"line5 line lineDots\" d=\"M38.16 40.06L3.86 74.36\"/>\n\n                      <path class=\"line6 line lineStatic\" d=\"M39.46 41.15L18.91 61.7\"/>\n                      <path class=\"line7 line lineStatic\" d=\"M43.57 43.77L23.02 64.32\"/>\n                    </g>\n                  </g>\n                  <g class=\"rotate\">\n                    <g class=\"rumble\">\n                      <path class=\"arrow\" d=\"M60.8 27.2c.6-2.1-1.3-4-3.4-3.4L19.5 35.3c-2.2.7-2.6 3.6-.8 4.9l15.8 7.6c1.1.5 2 1.4 2.5 2.6L44.4 66c1.3 1.9 4.2 1.4 4.9-.8l11.5-38z\"/>\n                    </g>\n                  </g>\n                </g>\n              </svg>\n              <div class=\"label\">Checking where this product was made...</div>\n            </div>\n          : <div style={{ paddingLeft: '12px', paddingRight: '12px'}}>\n            {this.state.response.verdict ?\n              <div style={{ paddingLeft: \"20px\" }}>\n                <h2 style={{ color: 'red'}}>\n                  <strong> WARNING! </strong> This product was likely made in China.\n                </h2>\n                <h3>\n                  Here's what we found.\n                </h3>\n              </div>\n            : <div>\n              <h2 style={{ color: 'green'}}>\n                <strong> All good! </strong> This product probably wasn't made in China.\n              </h2>\n              <h3>\n                We searched through questions, reviews, and product information so you don't have to.\n              </h3>\n            </div>\n            }\n            <div style={{ width: \"300px\" }} class=\"boxes\">\n              {this.state.response.evidence.qas ? this.state.response.evidence.qas.slice(0, this.state.qasToShow).map((qa, id) => (\n                <div class=\"box\" key={id}>\n                  <p className=\"card-type-label\">\n                    <strong> QUESTION </strong>\n                  </p>\n                  <h3 className=\"text-clamp\">{qa.question}</h3>\n                  <p className=\"text-clamp\">{qa.answer}</p>\n                  <div class=\"svg\">\n                    <img src={Question} height=\"40px\" width=\"40px\"/>\n                  </div>\n                </div>\n              )) : <div />}\n              {this.state.response.verdict ?\n                <a className=\"btn btn-primary showMore\" onClick={this.showMoreQas} style={{ onHover: 'pointer' }}>\n                  {this.state.qasExpanded ? (\n                    <span> - Show less</span>\n                  ) : (\n                    <span> + Show more</span>\n                  )}\n                </a>\n              : <div />}\n              {this.state.response.evidence.reviews ? this.state.response.evidence.reviews.slice(0, this.state.reviewsToShow).map((review, id) => (\n                <div class=\"box\" key={id}>\n                  <p className=\"card-type-label\">\n                    <strong> REVIEW </strong>\n                  </p>\n                  <h3 className=\"text-clamp\">{review.title}</h3>\n                  <p className=\"text-clamp\">{review.text}</p>\n                  <div class=\"svg\">\n                   <img src={Dislike} height=\"40px\" width=\"40px\"/>\n                 </div>\n                </div>\n              )) : <div />}\n              {this.state.response.verdict ?\n                <a className=\"btn btn-primary showMore\" onClick={this.showMoreReviews}>\n                  {this.state.reviewsExpanded ? (\n                    <span> - Show less</span>\n                  ) : (\n                    <span> + Show more</span>\n                  )}\n                </a>\n              : <div />}\n            </div>\n            <footer className=\"footer\">\n              <h6 className=\"category category-absolute\">\n                Powered by{\" \"}\n                <a\n                  href=\"https://app.blueriddle.io\"\n                  target=\"_blank\"\n                >\n                  <img\n                    alt=\"...\"\n                    className=\"powered-by-logo\"\n                    src={require(\"./logo-black.png\")}\n                  ></img>\n                </a>\n              </h6>\n            </footer>\n          </div>\n        }\n        </>\n      )\n    }\n    else {\n      return (\n        <>\n          <div style={{ paddingLeft: '12px', paddingRight: '12px'}}>\n            <h2>\n              <strong> We couldn't find an Amazon product on this page. </strong>\n            </h2>\n            <div class=\"label\">\n              To use Blueriddle, click on the Blueriddle icon from the page of the Amazon product you'd like to check.\n            </div>\n          </div>\n          <div className=\"backg\">\n            <div className=\"sand\" />\n            <div className=\"tower\">\n              <div className=\"s1\"></div>\n              <div className=\"s2\"></div>\n              <div className=\"door1\"></div>\n              <div className=\"door2\"></div>\n              <div className=\"balcony\">\n                <div className=\"b1\"></div>\n                <div className=\"b2\"></div>\n                <div className=\"b3\"></div>\n                <div className=\"b4\"></div>\n                <div className=\"b5\"></div>\n                <div className=\"b6\"></div>\n                <div className=\"b7\"></div>\n                <div className=\"b8\"></div>\n                <div className=\"b9\"></div>\n              </div>\n              <div className=\"s3\"></div>\n              <div className=\"s4\"></div>\n              <div className=\"dome\"></div>\n              <div className=\"glass\"></div>\n              <div className=\"s5\"></div>\n              <div className=\"light\"></div>\n              <div className=\"sand1\"></div>\n              <div className=\"sand2\"></div>\n            </div>\n          </div>\n        </>\n      )\n    }\n  }\n}\n\nexport default Results;\n","import React, { Component } from 'react';\nimport logo from './icon.png';\nimport Results from './Results.js';\nimport Logo from './logo.png';\nimport './App.css';\nimport './App.scss';\nimport './loading.scss';\nimport './lighthouse.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <img style={{ textAlign: 'center', padding: '12px' }} src={Logo} height=\"30px\" width=\"auto\"/>\n          <div class=\"topProgress\">\n            <div class=\"topProgress-bar\" />\n          </div>\n          <h3 style={{ paddingLeft: '12px', paddingRight: '12px', color: '#082b6e'}}>\n            <strong> Know where your Amazon products come from </strong>\n          </h3>\n        </div>\n        <Results/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*global chrome*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}